# Generated by Django 5.1.7 on 2025-05-04 07:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import myapi.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('profession', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Domain', models.CharField(default='', max_length=30)),
                ('Title', models.CharField(max_length=50, unique=True)),
                ('Speciality', models.CharField(default='', max_length=30)),
                ('PDF_subject', models.FileField(max_length=500, upload_to='PDF/Project_Subject_PDF', validators=[django.core.validators.FileExtensionValidator(['pdf']), myapi.models.validate_file_nimetype])),
                ('is_taken', models.BooleanField(default=False)),
                ('Date_register', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapi.person')),
                ('Father_name', models.CharField(max_length=100)),
                ('Date_of_birth', models.DateField()),
                ('Place_of_birth', models.CharField(max_length=100)),
                ('Adresse', models.CharField(max_length=100)),
                ('Blood_type', models.CharField(max_length=30)),
                ('Work', models.CharField(default='', max_length=100)),
                ('Domaine', models.CharField(max_length=100)),
                ('is_another_association', models.BooleanField(default=False)),
                ('association_name', models.CharField(blank=True, default='', max_length=100)),
                ('Application_PDF', models.FileField(max_length=500, upload_to='PDF/Application_PDF', validators=[django.core.validators.FileExtensionValidator(['pdf']), myapi.models.validate_file_nimetype])),
            ],
            bases=('myapi.person',),
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapi.person')),
                ('Id_Membre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapi.member')),
            ],
            bases=('myapi.person',),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password_hash', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('member', 'Member'), ('admin', 'Admin')], max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='myapi.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment_history',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Payment_received_PDF', models.FileField(max_length=500, null=True, upload_to='PDF/Payment')),
                ('Payment_date', models.DateField(default=django.utils.timezone.now)),
                ('Next_Payment_date', models.DateField(default=django.utils.timezone.now)),
                ('payed', models.BooleanField(default=False)),
                ('Id_Membre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapi.member')),
            ],
        ),
        migrations.CreateModel(
            name='Intern',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapi.person')),
                ('available', models.BooleanField(default=False)),
                ('Id_Membre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapi.member')),
            ],
            bases=('myapi.person',),
        ),
        migrations.CreateModel(
            name='supervisor_internship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Role', models.CharField(choices=[('Admin', 'Admin'), ('Other', 'Other')], default='Other', max_length=30)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapi.project')),
                ('supervisor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapi.supervisor')),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('University', models.CharField(default='', max_length=50)),
                ('Start_Date', models.DateField(default=django.utils.timezone.now)),
                ('End_Date', models.DateField(default=django.utils.timezone.now)),
                ('Year_of_study', models.CharField(default='', max_length=20)),
                ('Project_year', models.IntegerField(choices=[(2020, '2020'), (2021, '2021'), (2022, '2022'), (2023, '2023'), (2024, '2024'), (2025, '2025'), (2026, '2026'), (2027, '2027'), (2028, '2028'), (2029, '2029')], default=2025)),
                ('Promotion', models.CharField(blank=True, max_length=30)),
                ('Certified', models.BooleanField(default=False)),
                ('PDF_Agreement', models.FileField(max_length=500, upload_to='PDF/Agreements_PDF', validators=[django.core.validators.FileExtensionValidator(['pdf']), myapi.models.validate_file_nimetype])),
                ('PDF_Prolongement', models.FileField(max_length=500, null=True, upload_to='PDF/Prolongments_PDF', validators=[django.core.validators.FileExtensionValidator(['pdf']), myapi.models.validate_file_nimetype])),
                ('PDF_Certified', models.FileField(max_length=500, null=True, upload_to='PDF/Certificates_PDF', validators=[django.core.validators.FileExtensionValidator(['pdf']), myapi.models.validate_file_nimetype])),
                ('Code_file', models.FileField(max_length=500, null=True, upload_to='Code/Zip')),
                ('Report_PDF', models.FileField(max_length=500, null=True, upload_to='Docs/Rapports_Docs')),
                ('Presentation_PDF', models.FileField(max_length=500, null=True, upload_to='Presentations/Interns_Presentation')),
                ('Project_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myapi.project')),
                ('intern_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='myapi.intern')),
            ],
            options={
                'unique_together': {('Project_id', 'intern_id')},
            },
        ),
    ]
